<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.2.0-ctp">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q1="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino" xmlns:q2="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q3="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q4="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:q5="clr-namespace:Bonsai.Video;assembly=Bonsai.Video" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="NestedWorkflow">
        <Name>Trigger Arduino Pin 6</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:DigitalOutput">
                <q1:PortName>COM6</q1:PortName>
                <q1:Pin>6</q1:Pin>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Boolean</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="q2:PythonTransform">
              <q2:Script>@returns(bool)
def process(value):
  if value &gt;= 200:
    i = True
  else:
    i = False
  return i</q2:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Centroid.X</Selector>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Image process</Name>
        <Description>Image processing</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:LargestBinaryRegion" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:FindContours">
                <q3:Mode>External</q3:Mode>
                <q3:Method>ChainApproxNone</q3:Method>
                <q3:Offset>
                  <q3:X>0</q3:X>
                  <q3:Y>0</q3:Y>
                </q3:Offset>
                <q3:MinArea xsi:nil="true" />
                <q3:MaxArea xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:Threshold">
                <q3:ThresholdValue>25</q3:ThresholdValue>
                <q3:MaxValue>255</q3:MaxValue>
                <q3:ThresholdType>BinaryInv</q3:ThresholdType>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:MorphologicalOperator">
                <q3:Size>
                  <q3:Width>4</q3:Width>
                  <q3:Height>4</q3:Height>
                </q3:Size>
                <q3:Anchor>
                  <q3:X>1</q3:X>
                  <q3:Y>1</q3:Y>
                </q3:Anchor>
                <q3:Shape>Ellipse</q3:Shape>
                <q3:Iterations>4</q3:Iterations>
                <q3:Operation>Erode</q3:Operation>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:Grayscale" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:Crop">
                <q3:RegionOfInterest>
                  <q3:X>78</q3:X>
                  <q3:Y>128</q3:Y>
                  <q3:Width>406</q3:Width>
                  <q3:Height>196</q3:Height>
                </q3:RegionOfInterest>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Write Raw Region Data</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="q4:CsvWriter">
              <q4:FileName>RawData.csv</q4:FileName>
              <q4:Append>false</q4:Append>
              <q4:Overwrite>false</q4:Overwrite>
              <q4:Suffix>FileCount</q4:Suffix>
              <q4:IncludeHeader>false</q4:IncludeHeader>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:BinaryRegionExtremes">
                <q3:Method>MajorAxis</q3:Method>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Write CPP Data</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="q4:CsvWriter">
              <q4:FileName>CPP_Data.csv</q4:FileName>
              <q4:Append>false</q4:Append>
              <q4:Overwrite>true</q4:Overwrite>
              <q4:Suffix>FileCount</q4:Suffix>
              <q4:IncludeHeader>false</q4:IncludeHeader>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Centroid.Y</Selector>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Conversions</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="q2:PythonTransform">
                    <q2:Script>import clr
clr.AddReference("OpenCV.Net")
from System import Tuple, Math, Single
from OpenCV.Net import Point2f

head = None
tail = None

def distancesquare(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return dx * dx + dy * dy

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return Math.Atan2(dy, dx)

@returns(Single)
def process(value):
  global head, tail
  pt1 = value.Item1
  pt2 = value.Item2
  if pt1.X == Single(float.NaN):
    head = None
    tail = None
    return float.NaN
  else:
    if head is None or distancesquare(pt1, head) &lt; distancesquare(pt1, tail):
      head = pt1
      tail = pt2
    else:
      head = pt2
      tail = pt1
    return angleline(head,tail)</q2:Script>
                  </Expression>
                  <Expression xsi:type="q2:ExpressionTransform">
                    <q2:Expression>Convert.ToInt32(it)</q2:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Source.Timestamp.DateTime.TimeOfDay.TotalMilliseconds</Selector>
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source2</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source3</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>3</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>4</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>5</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Timestamp" />
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source2</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source3</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>1</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>3</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>1</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>3</To>
              <Label>Source2</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:VideoCaptureDevice">
          <q5:Index>1</q5:Index>
        </Combinator>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Write video file</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:VideoWriter">
                <q3:FileName>CPPvideo.avi</q3:FileName>
                <q3:Suffix>FileCount</q3:Suffix>
                <q3:Buffered>true</q3:Buffered>
                <q3:Overwrite>false</q3:Overwrite>
                <q3:FourCC>FMP4</q3:FourCC>
                <q3:FrameRate>30</q3:FrameRate>
                <q3:FrameSize>
                  <q3:Width>0</q3:Width>
                  <q3:Height>0</q3:Height>
                </q3:FrameSize>
                <q3:ResizeInterpolation>NearestNeighbor</q3:ResizeInterpolation>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>1</From>
        <To>4</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>0</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>4</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Arduino.DigitalOutput, Bonsai.Arduino, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.LargestBinaryRegion, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Threshold, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.MorphologicalOperator, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Crop, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionExtremes, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.ExpressionTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timestamp, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Video.VideoCaptureDevice, Bonsai.Video, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.VideoWriter, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>